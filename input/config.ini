##################### Variable Definitions #####################
### Data: defines the inputs
# input_file: name of the csv file (without any quotation marks or spaces) containing results of the multi-objective optimization; each row should represent a Pareto optimal solution, column names should contain no spaces, and values should be numerical 
# col_correlation_matrix (optional): the subset of columns from the input_file to be included in the correlation matrix (each column name MUST be separated by a comma THEN a space)
# columns: the subset of columns from the input_files to be used in principal component analysis, extreme solution handling, then clustering (each column name MUST be separated by a comma THEN a space)

### Clustering: the code performs multiple iterations testing different numbers of clusters (from min_clusters to max_clusters inclusive) on the data; if there are a known number of clusters, you can choose to only run the code for the specific count of clusters by editing the boolean value fixed_clusters_boolean
# min_clusters (int): the minimum number of clusters to iterate through (if unknown, start with 2)
# max_clusters (int): the maximum number of clusters to iterate through (inclusive)
# fixed_clusters_boolean (boolean): boolean value where FALSE causes the code to iterate through min_clusters to max_clusters, and TRUE causes the code to only run for a specific number of clusters (defined as fixed_clusters)
# fixed_clusters (int): if fixed_clusters_boolean = TRUE, then the code will only run for this number of clusters (if fixed_clusters_boolean = FALSE, then this variable has no impact)

### Extreme_Solution Handling: if more than 'count' number of variables within a data point are at least 'deviation' standard deviations away from their mean, the point will be considered an extreme solution; the code performs multiple iterations of extreme solution handling by testing different number of 'count' and 'deviation'
# handle_outliers_boolean (boolean): boolean value where FALSE means no handling of extreme solutions occurs and TRUE causes the code to omit extreme solutions from clustering (the extreme solutions are not completely removed; they become their own representative solution)
# deviations_min (float), deviations_max (float): the range of deviation values for the code to iterate through; deviations = the number of standard deviations a variable within a datapoint needs to be away from its mean in order to be classified as extreme; the code will iterate through all values from min_deviations to max_deviations inclusive, based on the step value provided below
# deviations_step (float): the step at which the code will iterate through deviations_min to deviations_max; the lowest recommended value is 0.1, but the code will allow for a number up to 5 decimal places 
# count_min (int), count_max (int): the range of count values for the code to iterate through; count = the number of variables within a datapoint that need to be extreme in order for the datapoint to be omitted from clustering
# outlier_to_cluster_ratio (float): this ratio sets a limit for the number of extreme solutions allowed in the final clustering; if a clustering has more extreme solutions than the number of clusters multiplied by outlier_to_cluster_ratio, it will not be considered as a viable solultion (even if it has a larger silhouette score); for example, if there are 10 clusters and the outlier_to_cluster_ratio is 0.5, less than 5 extreme solutions will be allowed in the final clustering solution

### PCA: principal component analysis projects input data onto a number of uncorrelated axes called components
# min_components (int), max_components (int): the range of component values to iterate through; the code will iterate through all values from min_components to max_components inclusive; note max_components cannot be larger than the number of variables

### Plots
# num_variables_to_plot (int): a value 2 - 4 which determines the number of variables to plot
# var_1 = column to use for the x-axis within the representative solution graph
# var_1_label = label for the the x-axis within the representative solution graph
# var_2 = column to use for the y-axis within the representative solution graph
# var_2_label = label for the y-axis within the representative solution graph
# var_3 = column to use for the hue of the point within the representative solution graph
# var_3_label = label to describe the hue variable within the representative solution graph
# var_4 = column to use for the size of the point within the representative solution graph
# var_4_label = label to describe the size variable within the representative solution graph
# size_min = minimum size; recommend 40
# size_max = maximum size; recommend 400

### Frequency Plots
# plot_frequency_maps (boolean) = if TRUE (and if less than 6 land use options were considered in the optimization), the dominant land use options and their frequencies are printed as maps for each cluster (e.g. 'freq_map_cluster_1.png').
# rscript_package_path = path to the rscript package; this is most likely located in the bin folder of your R version and will take the form of `C:/Program Files/R/R-4.X.X/bin/Rscript`
# names_lu = label to describe the land use options considered in the optimization (only relevant if plot_frequency_maps = TRUE)

##################### Variable Configurations ##################### 
[Data]
input_file = pareto_and_scen_solutions.csv
col_correlation_matrix = WRaps, SM, WW, WG, ZR, WT, WR, AG, WT_Bio, SG_Bio, LU_Bio, ZR_Bio, WW_Bio, SM_Bio, Wraps_Bio, WG_Bio, PAST, PASE, FRSD, URLD, linE, Nmin, Norg, Pmin, Porg, SQ, BAU, LSH, LSP, OrgCrops_total, N_total, P_total
columns = SM, WW, WG, ZR, WT, WR, AG, PAST, FRSD, URLD, linE, OrgCrops_total, N_total, P_total

[Clustering]
min_clusters = 15
max_clusters = 20
fixed_clusters_boolean = true
# fixed_clusters is only used if fixed_cluster_boolean = TRUE; otherwise set to any integer and it will be ignored
fixed_clusters = 15

[Extreme_solutions]
handle_outliers_boolean = false
deviations_min = 2
deviations_max = 3
deviations_step = 0.2
count_min = 2
count_max = 6
outlier_to_cluster_ratio = 0.5

[PCA]
min_components = 6
max_components = 6

[Plots]
num_variables_to_plot = 4

## Variable 1 -- displayed on x-axis -- REQUIRED
var_1 = AY
var_1_label = Agricultural gross margin [Mio. EUR/yr]

## Variable 2 -- displayed on y-axis -- REQUIRED
var_2 = BD
var_2_label = Breeding habitat [perc change to current]

## Variable 3 -- displayed as point hue -- Required if num_variables_to_plot >= 3 --> otherwise write N/A
var_3 = LF
var_3_label = Lowflow [m2/s]

## Variable 4 -- displayed as point size -- Required if num_variables_to_plot = 4 --> otherwise write N/A
var_4 = NL
var_4_label = Nitrate load [kg N/yr]
size_min = 40 
size_max = 400 

[Frequency_Plots]
plot_frequency_maps = true
rscript_package_path = C:/Program Files/R/R-4.4.1/bin/Rscript
names_lu = SQ, LBA, LSH, LSP
